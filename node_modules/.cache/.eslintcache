[{"/Users/jafcp/WebstormProjects/bluter/src/index.js":"1","/Users/jafcp/WebstormProjects/bluter/src/Formulario.js":"2","/Users/jafcp/WebstormProjects/bluter/src/SignIn.js":"3","/Users/jafcp/WebstormProjects/bluter/src/Login.js":"4","/Users/jafcp/WebstormProjects/bluter/src/App.js":"5","/Users/jafcp/WebstormProjects/bluter/src/Principal.js":"6","/Users/jafcp/WebstormProjects/bluter/src/Privacy.js":"7","/Users/jafcp/WebstormProjects/bluter/src/fb.js":"8","/Users/jafcp/WebstormProjects/bluter/src/componentes/Marco.js":"9","/Users/jafcp/WebstormProjects/bluter/src/componentes/Centros.js":"10","/Users/jafcp/WebstormProjects/bluter/src/componentes/NotificacionOK.js":"11","/Users/jafcp/WebstormProjects/bluter/src/componentes/NotificacionP.js":"12","/Users/jafcp/WebstormProjects/bluter/src/componentes/TipoS.jsx":"13"},{"size":888,"mtime":1687277699000,"results":"14","hashOfConfig":"15"},{"size":8533,"mtime":1687310064000,"results":"16","hashOfConfig":"15"},{"size":552,"mtime":1686193514000,"results":"17","hashOfConfig":"15"},{"size":10444,"mtime":1711918961064,"results":"18","hashOfConfig":"15"},{"size":4552,"mtime":1686970501000,"results":"19","hashOfConfig":"15"},{"size":12554,"mtime":1687390640000,"results":"20","hashOfConfig":"15"},{"size":6266,"mtime":1687390311000,"results":"21","hashOfConfig":"15"},{"size":434,"mtime":1686970501000,"results":"22","hashOfConfig":"15"},{"size":389,"mtime":1686521092000,"results":"23","hashOfConfig":"15"},{"size":447,"mtime":1686521092000,"results":"24","hashOfConfig":"15"},{"size":616,"mtime":1686523578000,"results":"25","hashOfConfig":"15"},{"size":3014,"mtime":1687303802000,"results":"26","hashOfConfig":"15"},{"size":333,"mtime":1687307862000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jxiu3l",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jafcp/WebstormProjects/bluter/src/index.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/Formulario.js",["69"],[],"import React, { useState } from \"react\";\nimport \"./styles/Formulario.css\";\nimport arrow from \"./img/arrow-left.svg\";\nimport fondo from \"./img/4.jpg\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n\nconst Formulario = () => {\n\n  let correo = \"blutercenter@gmail.com\";\n  let asunto = \"BLUTER - SOLICITUD\"\n  let texto;\n\n  const enviarCorreo = () => {\n    const correoData = {\n      destino: correo,\n      asunto: asunto,\n      texto: texto,\n    };\n\n    axios\n      .post(\"http://localhost:3001/enviar-correo\", correoData)\n      .then((response) => {\n        console.log(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"Error al enviar el correo: \", error);\n      });\n  };\n\n  function back() {\n    window.location.href = '/signin';\n  }\n\n  /**useState para almacenar los valores del formulario, como valor inicial estamos creando un\n   * objeto con tres propiedades todos vacios, el objeto se llama 'values'\n   */\n  const [values, setValues] = useState({\n    name: \"\",\n    edad: null,\n    typeBlood: \"\",\n    email: \"\",\n    cel: null,\n    info: \"\",\n  });\n\n  /**useState para manerjar las validaciones, igual se est crea un objeto con tres propiedades de cadena vacia */\n  const [validations, setValidations] = useState({\n    name: \"\",\n    edad: null,\n    typeBlood: \"\",\n    email: \"\",\n    cel: null,\n    info: \"\",\n  });\n\n  const handleChange = (e) => {\n    /**Esta sintaxis se refiere a una desestructuracion de el objeto e, se obtendra el 'value(valor)' y el 'name' del campo\n     * que acaba de cambiar\n     */\n    const { name, value } = e.target;\n\n    /**se establecen los valores al objeto 'values' obteniendo el nombre del campo y asignado el valor con 'value' */\n    setValues({ ...values, [name]: value });\n  };\n\n  /**Funcion que se encarga de manejar el envio del formulario */\n\n  const env = () => {\n    enviarCorreo();\n    Swal.fire({\n      title: \"Solicitud Enviada\",\n      icon: \"success\",\n      timer: 1500,\n      showConfirmButton: false,\n      allowOutsideClick: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    /**preventDefault evita que el formulario se envie automaticamente al presionar el boton de envio */\n    e.preventDefault();\n    texto = `<h1>${name}</h1>\n             <h1>${edad}</h1>\n             <h1>${typeBlood}</h1>\n             <h1>${email}</h1>\n             <h1>${cel}</h1>\n             <h1>${info}</h1>`;\n    env();\n  };\n\n  /**se extraen los valores de las propiedades 'name', 'email', 'typeBlood' del objeto 'values'\n   * y se guardan en las variables con los mismos nombres\n   */\n  const { name, email, typeBlood, edad, cel, info } = values;\n\n  /**utilizo la desestructuracion para crear tres variables nuevas,'nameVal'... , y asignarles valores\n   * basados en las propiedades del objeto 'values', en este caso se ocupa el patron 'nombreOriginal: nuevoNombre'\n   * para asignar una propiedad de un objeto a una variable con un nombre diferente\n   *\n   * En este caso se esta tomando el objeto 'validations' y creando las tres nuevas variables que contienen los valores\n   * de las propiedades correspondientes, por lo que al finalizar la linea se crearan tres nuevas variables que contienen\n   * los mensajes de validacion especifico de cada campo, que se mostraran solo en caso de que haya errores en los campos del formulario\n   */\n  const {\n    name: nameVal,\n    email: emailVal,\n    typeBlood: typeBloodVal,\n    edad: edadVal,\n    cel: celVal,\n    info: infoVal,\n  } = validations;\n\n  return (\n      <div>\n        <img className='fffff' src={fondo} alt='fondo-bluter'></img>\n        <div className='div111'>\n          <div className='div222'>\n            <h4 className='hhh'>Formulario de Solicitud</h4>\n          </div>\n          <div className='div333'>\n          <form onSubmit={handleSubmit}>\n            <div className='form-1'>\n              <label className='n'>\n                Nombre:\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  className='n-1'\n                  onChange={handleChange}\n                  placeholder='Ingresa el nombre del solicitante'\n                  required\n              />\n              <div>{nameVal}</div>\n            </label>\n          </div>\n\n          <div className='form-2'>\n            <label className='e'>\n              Edad:\n              <input\n                type=\"number\"\n                name=\"edad\"\n                value={edad}\n                className='e-1'\n                onChange={handleChange}\n                placeholder='Ingresa la edad'\n                required\n              />\n              <div>{edadVal}</div>\n            </label>\n          </div>\n\n          <div className='form-3'>\n            <p>Indique el tipo de sangre</p>\n            <label>\n              A+\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"A+\"\n                onChange={handleChange}\n                required\n              />\n            </label>\n\n            <label>\n              O+\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"O+\"\n                onChange={handleChange}\n                required\n              />\n            </label>\n\n            <label>\n              B+\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"B+\"\n                onChange={handleChange}\n                required\n              />\n            </label>\n\n            <label>\n              AB+\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"AB+\"\n                onChange={handleChange}\n              />\n            </label>\n\n            <label>\n              A-\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"A-\"\n                onChange={handleChange}\n              />\n            </label>\n\n            <label>\n              O-\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"O-\"\n                onChange={handleChange}\n              />\n            </label>\n\n            <label>\n              B-\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"B-\"\n                onChange={handleChange}\n              />\n            </label>\n\n            <label>\n              AB-\n              <input\n                type=\"radio\"\n                name=\"typeBlood\"\n                value=\"AB-\"\n                onChange={handleChange}\n              />\n            </label>\n          </div>\n\n            <div className='form-4'>\n              <label  className='ccccc'>\n                Correo:\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  className='ccccc-1'\n                  onChange={handleChange}\n                  placeholder='Ingresa el correo'\n                  required\n                />\n                <div>{emailVal}</div>\n              </label>\n            </div>\n\n            <div className='form-5'>\n              <label className='t'>\n                Telefono:\n                <input\n                  type=\"tel\"\n                  name=\"cel\"\n                  value={cel}\n                  className='t-1'\n                  onChange={handleChange}\n                  placeholder='Ingresa el telefono'\n                  required\n                />\n                <div>{celVal}</div>\n              </label>\n            </div>\n\n            <div className='form-6'>\n              <label className='info-1'>Informacion medica:</label>\n              <textarea\n                type=\"text\"\n                name=\"info\"\n                value={info}\n                className='info-2'\n                onChange={handleChange}\n                placeholder=\"Escriba aqui si tiene alergia a algun medicamento, asi como tambien si se encuentra tomando algun medicamento\"\n              />\n              <div>{infoVal}</div>\n            <div>{typeBloodVal}</div>\n          </div>\n\n          <button type=\"submit\" className='env'>Enviar</button>\n          </form>\n          </div>\n\n           <div className='div444' onClick={back}>\n             <img className='back' src={arrow} alt='back' onClick={back}></img>\n           </div>\n\n        <div className='vv'></div>\n        </div>\n      </div>\n  );\n};\nexport default Formulario\n\n/*\n<p>{JSON.stringify(values)}</p>\n */","/Users/jafcp/WebstormProjects/bluter/src/SignIn.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/Login.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/App.js",["70","71"],[],"import React, { useRef } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './styles/App.css';\nimport img1 from './img/img1.jpg';\nimport img2 from './img/img2.jpg';\nimport logo from \"./img/bluter.svg\";\nimport arrow from \"./img/arrow.svg\";\nimport heart from \"./img/heart.svg\";\nimport firma from \"./img/firma.png\";\nimport Marco from \"./componentes/Marco\";\n\nfunction App() {\n\n    const inicio = useRef(null);\n    const acerca = useRef(null);\n    const nosotros = useRef(null);\n\n    const inicioscroll = () => {\n        inicio.current.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    const acercascroll = () => {\n        acerca.current.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    const nosotrosscroll = () => {\n        nosotros.current.scrollIntoView({ behavior: \"smooth\" });\n    };\n    function signin() {\n        window.location.href = '/signin';\n    }\n\n    function login() {\n        window.location.href = '/login';\n    }\n\n    function privacy() {\n        window.location.href = '/privacy';\n    }\n\n    return (\n        <div className='d00' id='inicio'>\n\n            <div className='d0' ref={inicio}>\n                <div className='navbar'>\n                    <img className='barra-logo' src={logo} alt='bluter'></img>\n                    <Link to=\"/\">Inicio</Link>\n                    <a onClick={acercascroll}>Acerca de</a>\n                    <a onClick={nosotrosscroll}>Nosotros</a>\n                </div>\n                <button onClick={signin} className='iniciasesion'>Inicia Sesión</button>\n                <button onClick={login} className='registrate'>Regístrate</button>\n                <div className='d01'>\n                    <h2>Sistema de Apoyo para Donativos Sanguíneos</h2>\n                </div>\n                <div className='d02'>\n                    <p className='txt1'>Únete y ayuda a salvar vidas. Regístrate como donante voluntario y haz solicitudes de donación en caso de necesitar una transfusión.</p>\n                </div>\n                <div className='boton1' onClick={signin}>\n                    <p>Regístrate ahora</p>\n                    <img className='arrow' src={arrow} alt='arrow'></img>\n                </div>\n                <img className='img1' src={img1} alt='img1'></img>\n            </div>\n\n            <div className='d1' ref={acerca}>\n                <img className='img2' src={img2} alt='img2'></img>\n                <div className='d001'>\n                    <p className='txt2'>En Bluter, el proceso es muy sencillo. Los usuarios pueden\n                        registrarse y crear un perfil indicando si están disponibles para donar sangre.\n                        Si necesitan una donación, pueden hacer una solicitud en la plataforma.\n                        <br></br>Bluter se encarga de buscar donantes disponibles cercanos al solicitante y\n                        enviarles una notificación para que puedan responder a la solicitud.\n                        <br></br>Una vez que un donante acepta la solicitud, el solicitante recibe los detalles\n                        necesarios para concertar una cita para la donación.\n                        <br></br><br></br>¡Así de fácil es salvar vidas con Bluter!</p>\n                    <img className='heart' src={heart} alt='heart'></img>\n                    <img className='firma' src={firma} alt='firma'></img>\n                </div>\n            </div>\n\n            <div className='d2' ref={nosotros}>\n                <div className='d0001'>\n                    <h2>Nosotros</h2>\n                </div>\n\n                    <div className='div1'>\n                        <Marco nombre = 'Jafthe Camargo' imagen='jafthe.jpg'/>\n                    </div>\n                    <div className='div2'>\n                        <Marco nombre = 'Itzel Ramírez' imagen='itzel.jpg'/>\n                    </div>\n                    <div className='div3'>\n                        <Marco nombre = 'Antonio Martínez'imagen='antonio.jpg'/>\n                    </div>\n                    <div className='div4'>\n                        <Marco nombre = 'Ángel Vargas'imagen='angel.jpg'/>\n                    </div>\n\n                <div className='d-foot'>\n                    <img onClick={inicioscroll} className='f-img' src={logo} alt='bluter'></img>\n                    <p className='f-text'>© 2023 BLUTER Todos los derechos reservados.</p>\n                    <p className='f-policies' onClick={privacy}>Política de Privacidad</p>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","/Users/jafcp/WebstormProjects/bluter/src/Principal.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/Privacy.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/fb.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/componentes/Marco.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/componentes/Centros.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/componentes/NotificacionOK.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/componentes/NotificacionP.js",[],[],"/Users/jafcp/WebstormProjects/bluter/src/componentes/TipoS.jsx",[],[],{"ruleId":"72","severity":1,"message":"73","line":48,"column":23,"nodeType":"74","messageId":"75","endLine":48,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":48,"column":21,"nodeType":"78","endLine":48,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":49,"column":21,"nodeType":"78","endLine":49,"endColumn":49},"no-unused-vars","'setValidations' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]